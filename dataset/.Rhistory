View(train)
lm
?lm
regression<-lm(SalePrice ~ ., data = train)
library(readr)
out <- read_csv("Desktop/out.csv")
View(out)
library(readr)
data <- read_csv("Desktop/out.csv")
library(readr)
data <- read_csv("Desktop/out.csv")
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",main = "Histogram of Sale Price",xlab="sale price")
lines(density(data$SalePrice),col="red")
?hist
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",break=20,main = "Histogram of Sale Price",xlab="sale price")
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",break="20"",main = "Histogram of Sale Price",xlab="sale price")
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",break="20",main = "Histogram of Sale Price",xlab="sale price")
?hist
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",breaks=20,main = "Histogram of Sale Price",xlab="sale price")
lines(density(data$SalePrice),col="red")
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",breaks=30,main = "Histogram of Sale Price",xlab="sale price")
lines(density(data$SalePrice),col="red")
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",breaks=30,main = "Histogram of Sale Price",xlab="sale price")
axis(side=1, at=seq(0,100, 10), labels=seq(0,1000,100))
lines(density(data$SalePrice),col="red")
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",breaks=30,main = "Histogram of Sale Price",xlab="sale price")
axis(side=1, at=seq(0,100, 10), labels=seq(0,1000,100))`
lines(density(data$SalePrice),col="red")
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",breaks=30,main = "Histogram of Sale Price",xlab="sale price")
axis(side=1, at=seq(0,100, 10), labels=seq(0,1000,100))
lines(density(data$SalePrice),col="red")
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",breaks=30,main = "Histogram of Sale Price",xlab="sale price")
axis(side=1, at=seq(0,100, 10), labels=seq(0,800000,10000))
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",breaks=30,main = "Histogram of Sale Price",xlab="sale price")
axis(side=1, at=seq(0,800, 10), labels=seq(0,800000,10000))
lines(density(data$SalePrice),col="red")
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",breaks=30,main = "Histogram of Sale Price",xlab="sale price")
axis(side=0, at=seq(0,800, 10), labels=seq(0,800000,10000))
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",xlim = c(30000,800000), breaks=30,main = "Histogram of Sale Price",xlab="sale price")
lines(density(data$SalePrice),col="red")
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF",scientific = FALSEï¼Œbreaks=30,main = "Histogram of Sale Price",xlab="sale price")
#dependent variable
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF", cex = 0.7, breaks=30,main = "Histogram of Sale Price",xlab="sale price")
lines(density(data$SalePrice),col="red")
#dependent variable
options(scipen=10)
summary(data$SalePrice)
hist(data$SalePrice,freq=F,col = "#99CCFF", breaks=30,main = "Histogram of Sale Price",xlab="sale price")
lines(density(data$SalePrice),col="red")
#dependent variable
options(scipen=10)
summary(data$SalePrice)
hist(data$SalePrice,col = "#99CCFF", breaks=30,main = "Histogram of Sale Price",xlab="sale price")
lines(density(data$SalePrice),col="red")
#dependent variable
options(scipen=10)
summary(data$SalePrice)
hist(data$SalePrice,col = "#99CCFF", breaks=30,main = "Histogram of Sale Price",xlab="sale price")
lines(density(data$SalePrice),col="red")
#dependent variable
options(scipen=10)
summary(data$SalePrice)
hist(data$SalePrice,col = "#99CCFF", breaks=30,main = "Histogram of Sale Price",xlab="sale price")
#dependent variable
options(scipen=10)
summary(data$SalePrice)
hist(data$SalePrice,col = "#99CCFF", breaks=30,main = "Histogram of Sale Price",xlab="sale price")
hist(data$SalePrice,col = "#99CCFF", breaks=30,main = "Histogram of Sale Price",xlab="sale price")
setwd("~/Desktop/ChangCongCapstone/dataset")
library(readr)
data <- read_csv("out.csv")
setwd("~/Desktop/ChangCongCapstone/dataset")
library(readr)
data <- read_csv("out.csv")
set.seed(111)
train.index <- sample(row.names(data), 0.6*dim(data)[1])
valid.index <- setdiff(row.names(data), train.index)
train.df <- data[train.index, ]
valid.df <- data[valid.index, ]
write.csv(train.df, file = "train.csv")
setwd("~/Desktop/ChangCongCapstone/dataset")
library(readr)
data <- read_csv("out.csv")
set.seed(111)
train.index <- sample(row.names(data), 0.6*dim(data)[1])
valid.index <- setdiff(row.names(data), train.index)
train.df <- data[train.index, ]
valid.df <- data[valid.index, ]
write.csv(train.df, file = "traindata.csv")
setwd("~/Desktop/ChangCongCapstone/dataset")
library(readr)
data <- read_csv("out.csv")
set.seed(111)
train.index <- sample(row.names(data), 0.6*dim(data)[1])
valid.index <- setdiff(row.names(data), train.index)
train.df <- data[train.index, ]
valid.df <- data[valid.index, ]
write.csv(train.df, file = "traindata.csv")
write.csv(valid.df, file = "validdata.csv")
setwd("~/Desktop/ChangCongCapstone/dataset")
library(readr)
data <- read.csv("out.csv",stringsAsFactors = F)
set.seed(111)
train.index <- sample(row.names(data), 0.6*dim(data)[1])
valid.index <- setdiff(row.names(data), train.index)
train.df <- data[train.index, ]
valid.df <- data[valid.index, ]
write.csv(train.df, file = "traindata.csv")
write.csv(valid.df, file = "validdata.csv")
setwd("~/Desktop/ChangCongCapstone/dataset")
library(readr)
data <- read.csv("train.csv",stringsAsFactors = F)
set.seed(111)
train.index <- sample(row.names(data), 0.6*dim(data)[1])
valid.index <- setdiff(row.names(data), train.index)
train.df <- data[train.index, ]
valid.df <- data[valid.index, ]
write.csv(train.df, file = "traindata.csv")
write.csv(valid.df, file = "validdata.csv")
var_name <- names(data)
var_name
select_var <- c('Id','MSZoning','Utilities', 'Neighborhood','BldgType','HouseStyle',
'OverallQual','OverallCond','YearBuilt', 'ExterQual','ExterCond',
'BsmtQual','BsmtCond','TotalBsmtSF','Heating','HeatingQC',
'CentralAir','Electrical','GrLivArea','BedroomAbvGr','KitchenAbvGr',
'KitchenQual','TotRmsAbvGrd','Functional','Fireplaces','FireplaceQu',
'GarageArea','GarageQual','GarageCond','OpenPorchSF','PoolArea',
'Fence','MoSold','YrSold','SaleType','SaleCondition','SalePrice')
select_train <- train[,select_var]
select_train <- data[,select_var]
var_name <- names(data)
select_var <- c('Id','MSZoning','Utilities','Neighborhood','BldgType','HouseStyle','OverallQual','OverallCond','YearBuilt','ExterQual','ExterCond',
'BsmtQual','BsmtCond','TotalBsmtSF','Heating','HeatingQC',
'CentralAir','Electrical','GrLivArea','BedroomAbvGr','KitchenAbvGr','KitchenQual','TotRmsAbvGrd','Functional','Fireplaces','FireplaceQu',
'GarageArea','GarageQual','GarageCond','OpenPorchSF','PoolArea',
'Fence','MoSold','YrSold','SaleType','SaleCondition','SalePrice')
select_train <- data[,select_var]
var_name <- names(data)
select_var <- c('MSZoning','Utilities','Neighborhood','BldgType','HouseStyle','OverallQual','OverallCond','YearBuilt','ExterQual','ExterCond',
'BsmtQual','BsmtCond','TotalBsmtSF','Heating','HeatingQC',
'CentralAir','Electrical','GrLivArea','BedroomAbvGr','KitchenAbvGr','KitchenQual','TotRmsAbvGrd','Functional','Fireplaces','FireplaceQu',
'GarageArea','GarageQual','GarageCond','OpenPorchSF','PoolArea',
'Fence','MoSold','YrSold','SaleType','SaleCondition','SalePrice')
select_train <- data[,select_var]
select_train$logPrice <- log(select_train$SalePrice)
View(data)
setwd("~/Desktop/ChangCongCapstone/dataset")
library(readr)
data <- read.csv("train.csv",stringsAsFactors = F)
set.seed(111)
var_name <- names(data)
select_var <- c('MSZoning','Utilities','Neighborhood','BldgType','HouseStyle','OverallQual','OverallCond','YearBuilt','ExterQual','ExterCond',
'BsmtQual','BsmtCond','TotalBsmtSF','Heating','HeatingQC',
'CentralAir','Electrical','GrLivArea','BedroomAbvGr','KitchenAbvGr','KitchenQual','TotRmsAbvGrd','Functional','Fireplaces','FireplaceQu',
'GarageArea','GarageQual','GarageCond','OpenPorchSF','PoolArea',
'Fence','MoSold','YrSold','SaleType','SaleCondition','SalePrice')
select_train <- data[,select_var]
select_train$logPrice <- log(select_train$SalePrice)
train.index <- sample(row.names(select_train), 0.6*dim(data)[1])
valid.index <- setdiff(row.names(select_train), train.index)
train.df <- select_train[train.index, ]
valid.df <- select_train[valid.index, ]
write.csv(train.df, file = "traindata.csv")
write.csv(valid.df, file = "validdata.csv")
View(train.df)
View(valid.df)
setwd("~/Desktop/ChangCongCapstone/dataset")
library(readr)
data <- read.csv("train.csv",stringsAsFactors = F)
set.seed(111)
var_name <- names(data)
select_var <- c('MSZoning','Utilities','Neighborhood','BldgType','HouseStyle','OverallQual','OverallCond','YearBuilt','ExterQual','ExterCond',
'BsmtQual','BsmtCond','TotalBsmtSF','Heating','HeatingQC',
'CentralAir','Electrical','GrLivArea','BedroomAbvGr','KitchenAbvGr','KitchenQual','TotRmsAbvGrd','Functional','Fireplaces','FireplaceQu',
'GarageArea','GarageQual','GarageCond','OpenPorchSF','PoolArea',
'Fence','MoSold','YrSold','SaleType','SaleCondition','SalePrice')
select_train <- data[,select_var]
select_train$logPrice <- log(select_train$SalePrice)
train.index <- sample(row.names(select_train), 0.6*dim(data)[1])
valid.index <- setdiff(row.names(select_train), train.index)
train.df <- select_train[train.index, ]
valid.df <- select_train[valid.index, ]
write.csv(train.df, file = "trainselected.csv")
write.csv(valid.df, file = "validselected.csv")
linreg <- lm(lSalePrice~.-SalePrice, data = train.df)
linreg <- lm(logPrice~.-SalePrice, data = train.df)
summary(linreg)
linreg <- lm(logPrice~.-SalePrice, data = train.df)
summary(linreg)
backward<-stepAIC(linreg,direction='backward',trace=FALSE)
library(knitr)
library(ggplot2)
library(plyr)
library(dplyr)
library(corrplot)
library(caret)
library(gridExtra)
library(scales)
library(Rmisc)
library(ggrepel)
library(randomForest)
library(psych)
library(xgboost)
library(ggplot2)
library(readr)
library(gplots)
library(repr)
library(MASS)
linreg <- lm(logPrice~.-SalePrice, data = train.df)
summary(linreg)
backward<-stepAIC(linreg,direction='backward',trace=FALSE)
summary(backward)
pred1 <- predict(backward,valid.df,type = "response")
residuals <-valid.df$logPrice - pred1
residuals
accuracy(pred1, residuals <-valid.df$logPrice - pred1$lSalePrice)
library(forecast)
accuracy(pred1, residuals <-valid.df$logPrice - pred1$lSalePrice)
accuracy(pred1, residuals <-valid.df$logPrice - pred1$logPrice)
linreg_pred <- data.frame("Predicted" = pred1, "Actual" = valid.df$logPrice, "Residual" = residuals)
accuracy(pred1, residuals <-valid.df$logPrice - pred1$logPrice)
library(forecast)
#use predict() to make prediction on a new set
pred1 <- predict(backward,valid.df,type = "response")
residuals <-valid.df$logPrice - pred1
linreg_pred <- data.frame("Predicted" = pred1, "Actual" = valid.df$logPrice, "Residual" = residuals)
accuracy(pred1, residuals <-valid.df$logPrice - pred1$logPrice)
accuracy(pred1, valid.df$lSalePrice)
library(forecast)
#use predict() to make prediction on a new set
pred1 <- predict(backward,valid.df,type = "response")
residuals <-valid.df$logPrice - pred1
linreg_pred <- data.frame("Predicted" = pred1, "Actual" = valid.df$logPrice, "Residual" = residuals)
accuracy(pred1, valid.df$lSalePrice)
residuals
library(forecast)
#use predict() to make prediction on a new set
pred1 <- predict(backward,valid.df,type = "response")
residuals <-valid.df$logPrice - pred1
linreg_pred <- data.frame("Predicted" = pred1, "Actual" = valid.df$logPrice, "Residual" = residuals)
accuracy(pred1, valid.df$logPrice)
rmse(pred1, valid.df$logPrice)
?rmse
library(ModelMetrics)
rmse(pred1, valid.df$logPrice)
ggplot(select_train, aes(x = logPrice, fill = ..count..)) +
geom_histogram(binwidth = 0.05) +
ggtitle("Figure 2 Histogram of log SalePrice") +
ylab("Count of houses") +
xlab("Housing Price") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(select_train, aes(x = logPrice, fill = ..count..)) +
geom_histogram(binwidth = 0.05) +
ggtitle("Figure 2 Histogram of log SalePrice") +
ylab("Count of houses") +
xlab("Housing Price") )
ggplot(select_train, aes(x = logPrice, fill = ..count..)) +
geom_histogram(binwidth = 0.05) +
ggtitle("Figure 2 Histogram of log SalePrice") +
ylab("Count of houses") +
xlab("Housing Price")
)
ggplot(select_train, aes(x = logPrice, fill = ..count..)) +
geom_histogram(binwidth = 0.05) +
ggtitle("Figure 2 Histogram of log SalePrice") +
ylab("Count of houses") +
xlab("Housing Price")
ggplot(select_train, aes(x = logPrice)) +
geom_histogram(binwidth = 0.05) +
ggtitle("Figure 2 Histogram of log SalePrice") +
ylab("Count of houses") +
xlab("Housing Price") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(select_train, aes(x = logPrice, fill = ..count..)) +
geom_histogram(binwidth = 0.05) +
ggtitle("Figure 2 Histogram of log SalePrice") +
ylab("Count of houses") +
xlab("Housing Price") +
theme(plot.title = element_text(hjust = 0.5))
View(select_var)
View(select_train)
summary(select_train)
class(select_train)
head(select_train)
summary(select_train$SalePrice)
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=SalePrice)) +
geom_histogram(fill="blue", binwidth = 10000) +
scale_x_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(select_train, aes(x = logPrice, fill = "green")) +
geom_histogram(binwidth = 0.05) +
ggtitle("Histogram of log SalePrice") +
ylab("Count of houses") +
xlab("Housing Price") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(select_train, aes(x = logPrice)) +
geom_histogram(binwidth = 0.05, fill = "green") +
ggtitle("Histogram of log SalePrice") +
ylab("Count of houses") +
xlab("Housing Price") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(select_train, aes(x = logPrice)) +
geom_histogram(binwidth = 0.05, fill = "#99CCFF") +
ggtitle("Histogram of log SalePrice") +
ylab("Count of houses") +
xlab("Housing Price") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(select_train, aes(x = logPrice, fill = ..count..)) +
geom_histogram(binwidth = 0.05) +
ggtitle("Histogram of log SalePrice") +
ylab("Count of houses") +
xlab("Housing Price") +
theme(plot.title = element_text(hjust = 0.5))
numericVars <- which(sapply(select_train, is.numeric))
numericVars
numericVars <- which(sapply(select_train, is.numeric))
all_numVar <- select_train[, numericVars]
cor_numVar <- cor(all_numVar, use="pairwise.complete.obs")
summary(cor_numVar)
cor_numVar <- cor(select_train, use="pairwise.complete.obs")
cor_numVar <- cor(select_train, use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(cor_numVar[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.5)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
cor_numVar <- cor(select_train, use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(cor_numVar[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.5)))
cor_numhigh <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
correlation <- cor(select_train, use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) (x > 0.5 | x < -0.5))))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
correlation <- cor(select_train, use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) (x > 0.3 | x < -0.3))))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
correlation <- cor(select_train, use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.3)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
correlation <- cor(select_train, use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.5)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
correlation <- cor(select_train, use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.2)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
correlation <- cor(select_train, use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.6)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
correlation <- cor(select_train[,-37], use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.6)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
correlation <- cor(select_train[,-37], use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.5)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
correlation <- cor(select_train[,-37], use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.6)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
correlation <- cor(select_train[,-37], use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.6)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
ggplot(select_train, aes(x=OverallQual, y=SalePrice, fill=OverallQual)) +
geom_boxplot(alpha=0.3) +
stat_summary(fun.y=mean, geom="point", shape=20, size=4, color="red", fill="red")+
theme(legend.position="none")+
ggtitle("Boxplot of SalePrice by OverallQual")+
theme(plot.title = element_text(hjust = 0.5))
hist(select_train$OverallQual,freq=F,col = "coral1",main = "Histogram of OverallQual",xlab="OverallQual")
ggplot(select_train, aes(x=OverallQual, y=SalePrice, fill=OverallQual)) +
geom_boxplot(alpha=0.3) +
stat_summary(fun.y=mean, geom="point", shape=20, size=4, color="red", fill="red")+
theme(legend.position="none")+
ggtitle("Figure 4 Boxplot of SalePrice by MSZoning")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=select_train[!is.na(all$SalePrice),], aes(x=factor(OverallQual), y=SalePrice))+
geom_boxplot(col='blue') + labs(x='Overall Quality') +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=factor(OverallQual), y=SalePrice))+
geom_boxplot(col='blue') + labs(x='Overall Quality') +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=GrLivArea, y=SalePrice))+
geom_point(col='blue') + geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1)) +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma) +
geom_text_repel(aes(label = ifelse(select_train$GrLivArea[!is.na(select_train$SalePrice)]>4500, rownames(all), '')))
plot(select_train$GrLivArea,select_train$SalePrice)
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=GrLivArea, y=SalePrice))+
geom_point(col='blue') + geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1)) +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma) +
geom_text_repel(aes(label = ifelse(select_train$GrLivArea[!is.na(select_train$SalePrice)]>4500, rownames(all), '')))
correlation <- cor(select_train[,-37], use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.6)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=GrLivArea, y=SalePrice))+
geom_point(col='blue') + geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1)) +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma) +
geom_text_repel(aes(label = ifelse(select_train$GrLivArea[!is.na(select_train$SalePrice)]>4500, rownames(all), '')))
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=GrLivArea, y=SalePrice))+
geom_point(col='blue') + geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1)) +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
)
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=GrLivArea, y=SalePrice))+
geom_point(col='blue') + geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1)) +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=GarageArea, y=SalePrice))+
geom_point(col='blue') + geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1)) +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=GarageArea, y=SalePrice))+
geom_point(col='blue') + geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1))
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=GarageArea, y=SalePrice))+
geom_point(col='blue') + geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1)) +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
summary(select_train$SalePrice)
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=SalePrice)) +
geom_histogram(fill="blue", binwidth = 10000) +
scale_x_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(select_train, aes(x = logPrice, fill = ..count..)) +
geom_histogram(binwidth = 0.05) +
ggtitle("Histogram of log SalePrice") +
ylab("Count of houses") +
xlab("Housing Price") +
theme(plot.title = element_text(hjust = 0.5))
correlation <- cor(select_train[,-37], use="pairwise.complete.obs")
#sort on decreasing correlations with SalePrice
cor_sorted <- as.matrix(sort(correlation[,'SalePrice'], decreasing = TRUE))
#select only high corelations
CorHigh <- names(which(apply(cor_sorted, 1, function(x) abs(x)>0.6)))
cor_numVar <- cor_numVar[CorHigh, CorHigh]
corrplot.mixed(cor_numVar, tl.col="black", tl.pos = "lt")
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=factor(OverallQual), y=SalePrice))+
geom_boxplot(col='blue') + labs(x='Overall Quality') +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=GrLivArea, y=SalePrice))+
geom_point(col='blue') + geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1)) +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
ggplot(data=select_train[!is.na(select_train$SalePrice),], aes(x=GarageArea, y=SalePrice))+
geom_point(col='blue') + geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1)) +
scale_y_continuous(breaks= seq(0, 800000, by=100000), labels = comma)
linreg <- lm(logPrice~.-SalePrice, data = train.df)
summary(linreg)
backward<-stepAIC(linreg,direction='backward',trace=FALSE)
summary(backward)
rmse(pred1, valid.df$logPrice)
